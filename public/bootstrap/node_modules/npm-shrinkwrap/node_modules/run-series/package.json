{
  "name": "run-series",
  "description": "Run an array of functions in series",
  "version": "1.0.2",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/run-series/issues"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "^2.12.3"
  },
  "homepage": "https://github.com/feross/run-series",
  "keywords": [
    "series",
    "async",
    "function",
    "callback",
    "asynchronous",
    "run",
    "array",
    "run series"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/run-series.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/9..latest",
      "chrome/25..latest",
      "chrome/canary",
      "firefox/20..latest",
      "firefox/nightly",
      "safari/6..latest",
      "opera/12..latest",
      "opera/next",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# run-series [![travis](https://img.shields.io/travis/feross/run-series.svg)](https://travis-ci.org/feross/run-series) [![npm](https://img.shields.io/npm/v/run-series.svg)](https://npmjs.org/package/run-series)\n\n### Run an array of functions in series\n\n![series](https://raw.githubusercontent.com/feross/run-series/master/img.png) [![browser support](https://ci.testling.com/feross/run-series.png)](https://ci.testling.com/feross/run-series)\n\n### install\n\n```\nnpm install run-series\n```\n\n### usage\n\n#### series(tasks, [callback])\n\nRun the functions in the `tasks` array in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its callback, no\nmore functions are run, and `callback` is immediately called with the value of the error.\nOtherwise, `callback` receives an array of results when `tasks` have completed.\n\n##### arguments\n\n- `tasks` - An array containing functions to run, each function is passed a\n`callback(err, result)` which it must call on completion with an error `err` (which can\nbe `null`) and an optional result value.\n- `callback(err, results)` - An optional callback to run once all the functions have\ncompleted. This function gets a results array containing all the result arguments passed\nto the task callbacks.\n\n##### example\n\n```js\nvar series = require('run-series')\n\nseries([\n  function (callback) {\n    // do some stuff ...\n    callback(null, 'one')\n  },\n  function (callback) {\n    // do some stuff ...\n    callback(null, 'two')\n  }\n],\n// optional callback\nfunction (err, results) {\n  // the results array will equal ['one','two']\n})\n```\n\nThis module is basically equavalent to\n[`async.series`](https://github.com/caolan/async#seriestasks-callback), but it's\nhandy to just have the functions you need instead of the kitchen sink. Modularity!\nEspecially handy if you're serving to the browser and need to reduce your javascript\nbundle size.\n\nWorks great in the browser with [browserify](http://browserify.org/)!\n\n### see also\n\n- [run-auto](https://github.com/feross/run-auto)\n- [run-parallel](https://github.com/feross/run-parallel)\n- [run-waterfall](https://github.com/feross/run-waterfall)\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "_id": "run-series@1.0.2",
  "dist": {
    "shasum": "fe08d447a012b4aa838a1d7b796c922d024d95b6"
  },
  "_from": "run-series@^1.0.2",
  "_resolved": "https://registry.npmjs.org/run-series/-/run-series-1.0.2.tgz"
}
