{
  "name": "grunt-html-validation",
  "description": "W3C html validation grunt plugin",
  "version": "0.1.18",
  "homepage": "https://github.com/praveenvijayan/grunt-html-validation",
  "author": {
    "name": "praveenvijayan",
    "email": "praveenv.vijayan@gmail.com",
    "url": "http://decodize.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/praveenvijayan/grunt-html-validation.git"
  },
  "bugs": {
    "url": "https://github.com/praveenvijayan/grunt-html-validation/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "dependencies": {
    "colors": "~0.6.0",
    "request": "~2.34.0",
    "w3cjs": "~0.1.25"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-nodeunit": "~0.3.3"
  },
  "keywords": [
    "gruntplugin"
  ],
  "files": [
    "tasks",
    "LICENSE-MIT"
  ],
  "readme": "# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n[![NPM](https://nodei.co/npm/grunt-html-validation.png?downloads=true)](https://nodei.co/npm/grunt-html-validation/)\n\n> W3C html validation grunt plugin. Validate all files in a directory automatically.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\nAnd add to your task list using `validation`:\n\n```js\ngrunt.registerTask('default', ['validation']);\n```\n\n## The \"validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `validation` to the data object passed into `grunt.initConfig()`.\n\n```js\nvalidation: {\n    options: {\n        reset: grunt.option('reset') || false,\n        stoponerror: false,\n        remotePath: 'http://decodize.com/',\n        remoteFiles: ['html/moving-from-wordpress-to-octopress/',\n                      'css/site-preloading-methods/'], //or\n        remoteFiles: 'validation-files.json', // JSON file contains array of page paths.\n        relaxerror: ['Bad value X-UA-Compatible for attribute http-equiv on element meta.'] //ignores these errors\n    },\n    files: {\n        src: ['<%= yeoman.app %>/*.html',\n              '!<%= yeoman.app %>/index.html',\n              '!<%= yeoman.app %>/modules.html',\n              '!<%= yeoman.app %>/404.html']\n    }\n}\n```\n\n### Options\n\n#### options.reset\nType: `Boolean` <br/>\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files -\n`eg: sudo grunt validate --reset=true`\n\n#### options.proxy\nType: `String` <br/>\nDefault value: `null`\n\nSetup your proxy when you are behind a corporate proxy and encounters `ETIMEDOUT`.\n\n```js\nproxy: 'http://proxy:8080'\n```\n\n#### options.serverUrl\nType: `String` <br/>\nDefault value: `null`\n\nSupply a different validator server URL, for instance [if you run a local server](http://validator.w3.org/source/).\nEg: `http://localhost/w3c-validator/check`\n\n#### options.path\nType: `String` <br/>\nDefault value: `'validation-status.json'`\n\nDefault file for storing validation information.\n\n#### options.reportpath\nType: `String` <br/>\nDefault value: `validation-report.json`\n\nConsolidated report in JSON format, if reportpath is `false` it will not generated.\n\n#### options.stoponerror\nType: `Boolean` <br/>\nDefault value: `false`\n\nWhen hit by a validation error, html-validator continue validating next file by default and this process continues until all files in the list completes validation. If 'stoponerror' set to  `true`, validator will stop validating next file.\n\n#### options.maxTry\nType: `Number` <br/>\nDefault value: `3`\n\nNumber of retries when network error occuers. Default case, after 3 reties validator will move to next file.\n\n#### options.remotePath\nType: `String` <br/>\nDefault value: ``\n\n#### options.wrapfile\nType: `String` <br/>\nDefault value: ``\n\nFile that will wrap your files inside.\n\nThe file must contain a comment that will be replaced by each file content: **&lt;!-- CONTENT --&gt;**\n\nUseful to validate partials because w3c validator need &lt;html&gt;, &lt;head&gt;, &lt;body&gt;...\n\nNote: line reported will be the partial line, if you see a negative number this means that the error is in the *wrapfile*.\n\nexample\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n  </head>\n  <body>\n      <!-- CONTENT -->\n  </body>\n</html>\n```\n\n\n\n#### options.remoteFiles\nType: `Array` <br/>\nDefault value: ``\n\nArray of page paths to be validated. When remote files are not present validator will append file names from local folder. `remotePath` is mandatory when this option is specified.\n\neg:\n\n```js\nremoteFiles: ['html/moving-from-wordpress-to-octopress/',\n              'css/site-preloading-methods/']\n```\n\nyou can also provide a file that contains an array of pages.\n\n```js\nremoteFiles: 'validation-files.json'\n```\n\n```js\n['html/getting-started-with-yeoman-1-dot-0-beta-on-windows',\n'html/slidemote-universal-remote-control-for-html5-presentations/',\n'html/simple-responsive-image-technique/']\n```\n\n#### options.relaxerror\nType: `Array` <br/>\nDefault value: ``\n\nHelps to skip certain w3c errors messages from validation. Give exact error message or a regular expression in an array & validator will ignore those relaxed errors from validation.\n\n```js\nrelaxerror: ['Bad value X-UA-Compatible for attribute http-equiv on element meta.',\n             'document type does not allow element \"[A-Z]+\" here']\n```\n\n#### options.doctype\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- `HTML5`\n- `XHTML 1.0 Strict`\n- `XHTML 1.0 Transitional`\n- `XHTML 1.0 Frameset`\n- `HTML 4.01 Strict`\n- `HTML 4.01 Transitional`\n- `HTML 4.01 Frameset`\n- `HTML 4.01 + RDFa 1.1`\n- `HTML 3.2`\n- `HTML 2.0`\n- `ISO/IEC 15445:2000 (\"ISO HTML\")`\n- `XHTML 1.1`\n- `XHTML + RDFa`\n- `XHTML Basic 1.0`\n- `XHTML Basic 1.1`\n- `XHTML Mobile Profile 1.2`\n- `XHTML-Print 1.0`\n- `XHTML 1.1 plus MathML 2.0`\n- `XHTML 1.1 plus MathML 2.0 plus SVG 1.1`\n- `MathML 2.0`\n- `SVG 1.0`\n- `SVG 1.1`\n- `SVG 1.1 Tiny`\n- `SVG 1.1 Basic`\n- `SMIL 1.0`\n- `SMIL 2.0`\n\n\n#### options.charset\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- `utf-8`\n- `utf-16`\n- `iso-8859-1`\n- `iso-8859-2`\n- `iso-8859-3`\n- `iso-8859-4`\n- `iso-8859-5`\n- `iso-8859-6-i`\n- `iso-8859-7`\n- `iso-8859-8`\n- `iso-8859-8-i`\n- `iso-8859-9`\n- `iso-8859-10`\n- `iso-8859-11`\n- `iso-8859-13`\n- `iso-8859-14`\n- `iso-8859-15`\n- `iso-8859-16`\n- `us-ascii`\n- `euc-jp`\n- `shift_jis`\n- `iso-2022-jp`\n- `euc-kr`\n- `gb2312`\n- `gb18030`\n- `big5`\n- `big5-HKSCS`\n- `tis-620`\n- `koi8-r`\n- `koi8-u`\n- `iso-ir-111`\n- `macintosh`\n- `windows-1250`\n- `windows-1251`\n- `windows-1252`\n- `windows-1253`\n- `windows-1254`\n- `windows-1255`\n- `windows-1256`\n- `windows-1257`\n\n#### options.failHard\nType: `boolean` <br/>\nDefault value: `false`\n\nIf true, the task will fail at the end of its run if there were any validation errors that were not ignored via `options.relaxerror`.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\nReport issues [here](https://github.com/praveenvijayan/grunt-html-validation/issues)\n\n## Release History\n * 2014-05-27   v0.1.18  Version bump, Fixes #54\n * 2014-05-15   v0.1.17  Fixes #50, #52\n * 2014-04-23   v0.1.16  Fixes  \n * 2014-04-03   v0.1.15  Updated dependencies (jshnt, nodeunit, request), gitignore, code cleanup etc.. \n * 2014-03-23   v0.1.14  Updated with wrapfile & server url options.  \n * 2013-12-26   v0.1.13  Fixed running multiple tasks fail due to validation failure.\n * 2013-12-17   v0.1.11  Option to set proxy, w3cjs updated to 0.1.22, added fail hard and some bug fixes\n * 2013-11-22   v0.1.9   Fix some bugs\n * 2013-11-22   v0.1.8   Added options for specify doctype and charset\n * 2013-11-22   v0.1.7   Added support for RegExp in relaxed validation\n * 2013-08-31   v0.1.6   Added relaxed validation, w3cjs updated from 0.1.9 to 0.1.10.\n * 2013-08-31   v0.1.5   Added remote validation support. Max network error retry count.\n * 2013-08-19   v0.1.4   Fixed issues. Added 'stoponerror' option, validation report added.\n * 2013-08-05   v0.1.2   Fixed issues.\n * 2013-04-20   v0.1.0   Initial release.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/praveenvijayan/grunt-html-validation/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-html-validation@0.1.18",
  "dist": {
    "shasum": "6ebf5ac8d50a80bbed72ff7f4cd4d91046cdb719"
  },
  "_from": "grunt-html-validation@~0.1.18",
  "_resolved": "https://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.18.tgz"
}
