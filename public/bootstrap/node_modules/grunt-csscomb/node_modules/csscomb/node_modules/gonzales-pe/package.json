{
  "name": "gonzales-pe",
  "description": "Gonzales Preprocessor Edition (fast CSS parser)",
  "version": "3.0.0-10",
  "homepage": "http://github.com/tonyganch/gonzales-pe",
  "bugs": {
    "url": "http://github.com/tonyganch/gonzales-pe/issues"
  },
  "license": "MIT",
  "author": {
    "name": "Tony Ganch",
    "email": "tonyganch+github@gmail.com",
    "url": "http://tonyganch.com"
  },
  "main": "./lib/gonzales",
  "repository": {
    "type": "git",
    "url": "http://github.com/tonyganch/gonzales-pe.git"
  },
  "scripts": {
    "test": "(mkdir -p log && node ./test/mocha.js) | tee ./log/test.log"
  },
  "bin": {
    "gonzales": "./bin/gonzales.js"
  },
  "devDependencies": {
    "benchmark": "~1.0.0",
    "coffee-script": "~1.7.1",
    "microtime": "~0.3.3",
    "mocha": "~1.20.0"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "readme": "Gonzales is a fast CSS parser.    \nGonzales PE is a rework with support of preprocessors.    \n\nCurrently those are supported: SCSS, Sass, LESS.\n\nFor a plan of future work see [issue #4](https://github.com/tonyganch/gonzales-pe/issues/4).\n\n## Install\n\nTo install globally:\n\n    npm install gonzales-pe -g\n\nTo install as a project dependency:\n\n    npm install gonzales-pe\n\nTo install dev branch:\n\n    npm install git://github.com/tonyganch/gonzales-pe.git#dev\n\nTo clone from github:\n\n    git clone git@github.com:tonyganch/gonzales-pe.git\n\n## Build\n\nIf you installed/cloned the repo from GitHub, make sure to build library files\nfirst.    \nIt can be done by running `make` in the module's root directory.    \n`make` will build both Node.js and web versions (all files are comments-free\nbut not compressed).    \nIf you need a minified version for production, feel free to use uglifier of\nyour choice.\n\n## Use\n\nRequire Gonzales in your project:\n\n    var gonzales = require('gonzales-pe');\n\nDo something:\n\n    var css = 'a { color: tomato }';\n    console.log(gonzales.cssToAST(css));\n\nYou can learn more about available methods on [Gonzales usage](doc/Gonzales-Usage.md) page.\n\nAST is described on [Gonzales AST description](doc/AST-Description.md) page.\n\nYou can also invoke gonzales via a shell command (if you globally install it via `npm install gonzales-pe -g`)\n\n```\ngonzales myFile.css\n```\n\nOutputs the AST for that file. Example output:\n\n```\n['stylesheet',\n  ['atrules',\n    ['atkeyword',\n      ['ident', 'import']],\n    ['s', '\n']]]\n```\n\n## Test\n\nTo run tests:\n\n    npm test\n\nThis command will build library files from sources and run tests on all files\nin syntax directories.\n\nEvery test has 3 files: source stylesheet, expected AST and expected string\ncompiled back from AST to css.\n\nIf some tests fail, you can find information in test logs:\n\n- `log/test.log` contains all information from stdout;\n- `log/expected.txt` contains only expected text;\n- `log/result.txt` contains only result text.\n\nThe last two are made for your convenience: you can use any diff app to see\nthe defference between them.\n\nIf you want to test one specific string or get a general idea of how Gonzales\nworks, you can use `test/ast.js` file.    \nSimply change the first two strings (`css` and `syntax` vars) and run:\n\n    node test/ast.js\n\nPlease remember to also run `make` every time you modify any source files.\n\n## Report\n\nIf you find a bug or want to add a feature, welcome to [Issues](https://github.com/tonyganch/gonzales-pe/issues).\n\nIf you are shy but have a question, feel free to [drop me a\nline](mailto:tonyganch+gonzales@gmail.com).\n",
  "readmeFilename": "README.md",
  "_id": "gonzales-pe@3.0.0-10",
  "dist": {
    "shasum": "e0697daf884b80d892bb57382e40f3002a90cfb2"
  },
  "_from": "gonzales-pe@3.0.0-10",
  "_resolved": "https://registry.npmjs.org/gonzales-pe/-/gonzales-pe-3.0.0-10.tgz"
}
